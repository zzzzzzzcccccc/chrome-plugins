{"version":3,"file":"http-intercept.js","sources":["../../../../node_modules/lodash/_freeGlobal.js","../../../../node_modules/lodash/_root.js","../../../../node_modules/lodash/_Symbol.js","../../../../node_modules/lodash/_arrayMap.js","../../../../node_modules/lodash/isArray.js","../../../../node_modules/lodash/_getRawTag.js","../../../../node_modules/lodash/_objectToString.js","../../../../node_modules/lodash/_baseGetTag.js","../../../../node_modules/lodash/isObjectLike.js","../../../../node_modules/lodash/isSymbol.js","../../../../node_modules/lodash/_baseToString.js","../../../../node_modules/lodash/toString.js","../../../../node_modules/lodash/escapeRegExp.js","../../packages/home/src/model/http-blocking.ts","../../packages/home/src/model/chrome-message.ts","../../packages/home/src/constants/index.ts","../../packages/home/src/chrome/http-intercept.ts"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n","export enum HttpResponseHeaderOperation {\n  SET = 'set',\n  APPEND = 'append',\n}\n\nexport enum HttpBlockingActionType {\n  MODIFY = 'modify',\n}\n\nexport type HttpResponseHeader = {\n  header: string;\n  value: string;\n  operation: HttpResponseHeaderOperation;\n};\n\nexport type HttpBlockingAction = {\n  type: HttpBlockingActionType;\n  responseHeaders: HttpResponseHeader[];\n  responseData: string;\n};\n\nexport type HttpBlockingCondition = {\n  regexFilter: string;\n  requestMethods: string[];\n};\n\nexport type HttpBlockingItem = {\n  id: string;\n  priority: number;\n  action: HttpBlockingAction;\n  condition: HttpBlockingCondition;\n};\n","export enum ChromeMessageTo {\n  BACKGROUND = 'BACKGROUND',\n  CONTENT_SCRIPT = 'CONTENT_SCRIPT',\n}\n\nexport enum ChromeMessageMethod {\n  UPDATE_HTTP_BLOCKING_RULES = 'UPDATE_HTTP_BLOCKING_RULES',\n  REMOVE_HTTP_BLOCKING_RULES = 'REMOVE_HTTP_BLOCKING_RULES',\n  UPDATE_HTTP_BLOCKING_ENABLED = 'UPDATE_HTTP_BLOCKING_ENABLED',\n  GET_HTTP_BLOCKING_ENABLED = 'GET_HTTP_BLOCKING_ENABLED'\n}\n\nexport interface ChromeMessage<Data = undefined> {\n  to: ChromeMessageTo;\n  method: ChromeMessageMethod;\n  data: Data;\n}\n","import ICONS from './icons';\nimport SVGS from './svgs';\nimport DEVELOP_APPS from './develop-apps';\nimport SHOP_APPS from './shop-apps';\nimport GAME_APPS from './game-apps';\nimport MEDIA_APPS from './media-apps';\n\nexport const CHROME_MESSAGE_NAME_SPACE = '___CHROME_TAB_MANAGER___'\nexport const HTTP_STATUS_SUCCESS = 200;\nexport const HTTP_STATUS_TEXT_SUCCESS = 'OK';\nexport const HTTP_TIME_OUT = 10000;\nexport const SESSION_KEYS = {\n  store: '__store__',\n  theme: '__theme__',\n  language: '__language__',\n  recentKeyword: '__recent_keyword__',\n  enabledHttpBlocking: '__enabled_http_blocking__',\n};\nexport const CSS_NAME_SPACE = '__zc-home';\nexport const COLOR_RANGES = ['50', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\nexport const KEYBOARD_KEYS = {\n  command_s: 'metas',\n  alt_s: 'alts',\n  command_o: 'metao',\n  alt_o: 'alto',\n};\nexport const APP_SEARCH_LRU_CAPACITY = 20;\nexport const BASE_URL_BY_BAIDU = 'https://www.baidu.com';\nexport const BASE_URL_BY_GOOGLE = 'https://www.google.com';\nexport const BASE_URL_BY_BING = 'https://www.bing.com';\nexport const BASE_URL_BY_YAHOO = 'https://search.yahoo.com';\nexport const DEFAULT_BACKGROUND_URL_STORE = ['./images/bg/1.jpg', './images/bg/2.jpg'];\nexport const BASE_SASS_LIB_URL = './sass/sass.min.js';\nexport const BASE_SASS_LIB_WORKER_URL = `./sass/sass.worker.js`;\n\nexport const DEFAULT_APPS: Record<string, typeof DEVELOP_APPS> = {\n  develop: DEVELOP_APPS,\n  shop: SHOP_APPS,\n  game: GAME_APPS,\n  media: MEDIA_APPS,\n};\nexport const DEFAULT_HTTP_METHODS: Record<string, string> = {\n  GET: 'get',\n  POST: 'post',\n  PUT: 'put',\n  DELETE: 'delete',\n  PATCH: 'patch',\n  HEAD: 'head',\n  OPTIONS: 'options',\n};\nexport const DEFAULT_RESPONSE = {\n  code: 200,\n  data: 'Hello World',\n};\nexport const RESPONSE = 'response';\nexport const HEADER = 'header';\nexport const MAX_HTTP_BLOCKING_TOTAL_RULE = 30;\nexport { ICONS, SVGS, DEVELOP_APPS, SHOP_APPS, GAME_APPS, MEDIA_APPS };\n","import escapeRegExp from 'lodash/escapeRegExp';\nimport { ChromeMessage, ChromeMessageMethod, ChromeMessageTo, HttpBlockingItem } from '../model';\nimport { CHROME_MESSAGE_NAME_SPACE, HTTP_STATUS_SUCCESS, HTTP_STATUS_TEXT_SUCCESS } from '../constants';\n\ntype MockPayload = {\n  url: string | URL;\n  method: string;\n}\n\nexport default (function() {\n  const [originXHROpen, originXHRSend, originFetch] = [window.XMLHttpRequest.prototype.open, window.XMLHttpRequest.prototype.send, window.fetch]\n  let rules: HttpBlockingItem[] = [];\n\n  const setRules = (payload: HttpBlockingItem[]) => rules = payload;\n  const clearRules = () => rules = [];\n\n  const logger = ({ url, method }: MockPayload) => {\n    const timestamp = new Date().toISOString()\n    console.info(`[${timestamp}]%c[Tab Manager][http-intercept][${method}]:${url instanceof URL ? url.href : url}`, 'color: #1890ff;')\n  };\n\n  const diffUrl = (regexFilter: string, url: string | URL) => {\n    const currentUrl = url instanceof URL ? url.href : url;\n    if (regexFilter === currentUrl) {\n      return true\n    }\n    if (regexFilter.indexOf(currentUrl) > -1) {\n      return true\n    }\n    return new RegExp(escapeRegExp(regexFilter)).test(currentUrl);\n  };\n\n  const matcherHttpBlocking = ({ method = 'get', url }: MockPayload) => {\n    if (!rules?.length) {\n      return undefined;\n    }\n    return rules.find(rule =>\n      rule.condition.requestMethods.indexOf(method.toLocaleLowerCase()) > -1 && diffUrl(rule.condition.regexFilter, url)\n    );\n  };\n\n  const onMessage = (event: MessageEvent<Record<string, ChromeMessage<HttpBlockingItem[]>>>) => {\n    const { data } = event;\n    const message = data[CHROME_MESSAGE_NAME_SPACE]\n    if (message && message.to === ChromeMessageTo.CONTENT_SCRIPT) {\n      const { method, data: payload } = message;\n      switch (method) {\n        case ChromeMessageMethod.UPDATE_HTTP_BLOCKING_RULES:\n          setRules(payload);\n          break;\n        case ChromeMessageMethod.REMOVE_HTTP_BLOCKING_RULES:\n          clearRules();\n          break;\n      }\n    }\n  };\n\n  const interceptXHR = () => {\n    const writeXHRPrototypes = ['status', 'statusText', 'response', 'responseText', 'readyState']\n    window.XMLHttpRequest.prototype.open = function(...args: any[]) {\n      const [method, url] = args;\n      const httpBlockingItem = matcherHttpBlocking({ method, url });\n      if (httpBlockingItem) {\n        // @ts-ignore\n        this.__httpBlockingItem = httpBlockingItem;\n        logger({ method, url });\n      }\n      originXHROpen.apply(this, args as Parameters<XMLHttpRequest['open']>);\n    }\n    window.XMLHttpRequest.prototype.send = function(...args: any[]) {\n      // @ts-ignore\n      const rule = this.__httpBlockingItem as HttpBlockingItem | undefined;\n      if (rule) {\n        writeXHRPrototypes.forEach(key => Object.defineProperty(this, key, { writable: true }));\n        setTimeout(() => {\n          // @ts-ignore\n          this.status = HTTP_STATUS_SUCCESS;\n          // @ts-ignore\n          this.statusText = HTTP_STATUS_TEXT_SUCCESS;\n          // @ts-ignore\n          this.readyState = XMLHttpRequest.DONE;\n          // @ts-ignore\n          this.response = rule.action.responseData;\n          // @ts-ignore\n          this.responseText = rule.action.responseData;\n          this.getAllResponseHeaders = () => rule.action.responseHeaders.map(({ header, value }) => `${header}: ${value}`).join('\\n');\n          this.getResponseHeader = (key: string) => rule.action.responseHeaders.find(({ header }) => header === key)?.value || null;\n          this.dispatchEvent(new Event('readystatechange'))\n          this.dispatchEvent(new Event('loadend'))\n          // @ts-ignore\n          delete this.__httpBlockingItem;\n        }, 0)\n      } else {\n        originXHRSend.apply(this, args as Parameters<XMLHttpRequest['send']>);\n      }\n    }\n  };\n\n  const interceptFetch = () => {\n    window.fetch = (input, init) => {\n      let method = 'get';\n      let url: string | URL = ''\n      if (typeof input === 'string') {\n        url = input;\n      }\n      if (input instanceof Request) {\n        method = input.method;\n        url = input.url;\n      }\n      if (init) {\n        method = init.method || method;\n      }\n      const rule = matcherHttpBlocking({ method, url });\n      if (!rule) {\n        return originFetch(input, init);\n      }\n      logger({ method, url });\n      return new Promise<Response>((resolve) => {\n        setTimeout(() => {\n          resolve(new Response(rule.action.responseData, {\n            status: 200,\n            statusText: 'OK',\n            headers: rule.action.responseHeaders.reduce((headers, { header, value }) => {\n              headers.set(header, value);\n              return headers;\n            }, new Headers())\n          }))\n        }, 0)\n      })\n    }\n  };\n\n  const intercept = () => {\n    interceptXHR();\n    interceptFetch();\n    window.addEventListener('message', onMessage);\n  };\n\n  const unIntercept = () => {\n    window.XMLHttpRequest.prototype.open = originXHROpen;\n    window.XMLHttpRequest.prototype.send = originXHRSend;\n    window.fetch = originFetch;\n    window.removeEventListener('message', onMessage);\n  };\n\n  intercept();\n\n  return {\n    unIntercept,\n  }\n})()\n"],"names":["freeGlobal","global","Object","freeSelf","self","_Symbol","Function","Symbol","_arrayMap","array","iteratee","index","length","result","Array","isArray_1","isArray","require$$0","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","_getRawTag","value","isOwn","call","tag","unmasked","e","getRawTag","require$$1","objectToString","baseGetTag","isObjectLike","arrayMap","require$$2","isSymbol","symbolProto","symbolToString","_baseToString","baseToString","reRegExpChar","reHasRegExpChar","RegExp","source","HttpResponseHeaderOperation","HttpBlockingActionType","ChromeMessageTo","ChromeMessageMethod","string","test","replace","writeXHRPrototypes","_a","originXHROpen","originXHRSend","originFetch","rules","logger","matcherHttpBlocking","onMessage","httpIntercept","window","XMLHttpRequest","open","send","fetch","url","method","timestamp","Date","toISOString","console","info","concat","URL","href","_b","find","rule","condition","requestMethods","indexOf","toLocaleLowerCase","regexFilter","currentUrl","escapeRegExp","diffUrl","event","message","data","to","CONTENT_SCRIPT","payload","UPDATE_HTTP_BLOCKING_RULES","setRules","REMOVE_HTTP_BLOCKING_RULES","args","_i","arguments","httpBlockingItem","this","__httpBlockingItem","apply","_this","forEach","key","defineProperty","writable","setTimeout","status","statusText","readyState","DONE","response","action","responseData","responseText","getAllResponseHeaders","responseHeaders","map","header","join","getResponseHeader","dispatchEvent","Event","input","init","Request","Promise","resolve","Response","headers","reduce","set","Headers","addEventListener","unIntercept","removeEventListener"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}